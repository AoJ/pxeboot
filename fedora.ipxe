#!ipxe

# Fedora & CentOS

set ksurl http://boot.salstar.sk/ks/

goto ${menu} ||

# OS
:fedora
set os Fedora
set devel_version 19
menu Fedora
item --key 9 19 ${os} 19 ${arch} [9]
item --key 8 18 ${os} 18 ${arch} [8]
item --key 7 17 ${os} 17 ${arch} [7]
item --key b Beta ${os} ${devel_version}-Beta ${arch} [b]
item --key a Alpha ${os} ${devel_version}-Aplha ${arch} [a]
item --key d development ${os} ${devel_version} (development) ${arch} [d]
item --key A alt_stage ${os} dl.fedoraproject.org/pub/alt/stage ${arch} [A]
item --key f fedoraproject ${os} boot.fedoraproject.org [f]
isset ${version} || choose version || goto main_menu

# workaround for fedora 17
iseq ${version} 17 && set params rd.debug ${params} ||

goto fedora_${version} ||
set dir fedora/linux/releases/${version}/${os}/${arch}/os
set repo repo=${mirror}/${dir}
:fedora_setvars
#set osks ${ksurl}${version}
set osks ${ksurl}fedora
goto boottype

:fedora_development
set dir fedora/linux/development/${devel_version}/${arch}/os
set repo repo=${mirror}/${dir}
set params root=live:${mirror}/${dir}/LiveOS/squashfs.img ${params}
goto fedora_setvars

:fedora_Alpha
set version ${devel_version}-Alpha
set dir fedora/linux/releases/test/${version}/${os}/${arch}/os
set repo repo=${mirror}/${dir}
set params root=live:${mirror}/${dir}/LiveOS/squashfs.img ${params}
goto fedora_setvars

:fedora_Beta
set version ${devel_version}-Beta
set dir fedora/linux/releases/test/${version}/${os}/${arch}/os
set repo repo=${mirror}/${dir}
set params root=live:${mirror}/${dir}/LiveOS/squashfs.img ${params}
goto fedora_setvars

:fedora_live
set dir fedora/linux/releases/${version}/Live/${arch}
set img ${os}-${version}-${arch}-Live-Desktop.iso
prompt
goto main_menu

:fedora_alt_stage
# point repo do development tree
set dir fedora/linux/development/${devel_version}/${arch}/os
set repo repo=${mirror}/${dir}
# everything else to alt stage files
set mirror http://ftp.upjs.sk/pub/mirrors/fedoraproject
set stage_version ${devel_version}-TC6
echo -n Edit stage version: ${} && read stage_version
set dir alt/stage/${stage_version}/Fedora/${arch}/os
set params root=live:${mirror}/${dir}/LiveOS/squashfs.img ${params}
# signature checking is disabled for development version
set version development
goto fedora_setvars

# boot.fedoraproject.org online boot
:fedora_fedoraproject
echo ${cls}
imgverify boot.fedoraproject.org.ipxe ${sigs}boot.fedoraproject.org.ipxe.sig
chain boot.fedoraproject.org.ipxe
exit

:centos
set os CentOS
menu ${os}
item --key 6 6 ${os} 6 ${arch} [6]
item --key 5 5 ${os} 5 ${arch} [5]
item --key o other Choose other version [o]
isset ${version} || choose version || goto main_menu
iseq ${version} other || goto centos_skip_read_version
echo ${cls}
echo -n Enter version: ${} && read version
:centos_skip_read_version
set dir ${menu}/${version}/os/${arch}
set repo repo=${mirror}/${dir}
set osks ${ksurl}centos${version}
goto boottype

:scientific
set os Scientific Linux
menu ${os}
item --key 6 6 ${os} 6 ${arch} [6]
item --key 5 5 ${os} 5 ${arch} [5]
isset ${version} || choose version || goto main_menu
set dir ${menu}/${version}x/${arch}/os
iseq ${version} 5 && set dir ${menu}/${version}x/${arch} ||
set osks ${ksurl}centos${version}
set mirror http://ftp.scientificlinux.org/linux
goto boottype

:boottype
set ova ${os} ${version} ${arch}
menu ${os} boot type
item normal ${ova}
item --key k ks ${ova} minimal server kickstart [k]
item --key d desktop ${ova} desktop kickstart [d]
item --key r rescue ${ova} rescue [r]
item --key s remote ${ova} rescue with sshd [s]
item --key i isolinux ${ova} direct boot using isolinux [i]
isset ${testing} && item --key l live_desktop ${ova} Live Desktop [l] ||
isset ${testing} && item --key d live_kde ${ova} Live KDE [d] ||
isset ${bt} || choose bt || goto main_menu
echo ${cls}
iseq ${bt} ks && set params ksdevice=bootif BOOTIF=${mac} ks=${osks} ${params} ||
iseq ${bt} desktop && set params ksdevice=bootif ks=${ksurl}/pc pkgs=desktop ${params} ||
iseq ${bt} rescue && set params rescue ${params} ||
iseq ${bt} remote && set params ksdevice=bootif ks=${ksurl}rescue ${params} ||
goto bootos_${bt} ||
goto bootos_images

:bootos_images
echo Loading from ${mirror}/${dir}/isolinux/
echo ${}  ${repo}
echo ${}  ${params}
#set next-server 158.197.16.70
imgfree
# load vmlinuz and initrd
kernel ${mirror}/${dir}/isolinux/vmlinuz
iseq ${version} development && imgtrust --allow ||
iseq ${version} development && goto bootos_images_skip_verify_vmlinuz ||
imgverify vmlinuz ${sigs}${dir}/isolinux/vmlinuz.sig
:bootos_images_skip_verify_vmlinuz
initrd ${mirror}/${dir}/isolinux/initrd.img
iseq ${version} development && goto bootos_images_skip_verify_initrd ||
imgverify initrd.img ${sigs}${dir}/isolinux/initrd.img.sig
:bootos_images_skip_verify_initrd
imgargs vmlinuz ${repo} ${params}
# use method= instad of repo= for CentOS 5
iseq ${version} 5 && imgargs vmlinuz method=${mirror}/${dir} ${params} ||
imgstat
isset ${debug} && prompt ||
boot vmlinuz
goto main_menu

:bootos_isolinux
echo Loading isolinux from ${mirror}/${dir}/isolinux/
set 209:string isolinux.cfg
set 210:string ${mirror}/${dir}/isolinux/
imgfree
imgload ${url}pxelinux.0
imgverify pxelinux.0 ${sigs}pxelinux.0.sig
boot
goto main_menu

:bootos_live_desktop
set img ${os}-${version}-${arch}-Live-Desktop.iso
goto bootos_live

:bootos_live_kde
set img ${os}-${version}-${arch}-Live-KDE.iso
goto bootos_live

:bootos_live
set dir fedora/linux/releases/${version}/Live/${arch}
set next-server 158.197.16.70
set params ip=${ip}:${next-server}:${gateway}:${netmask} BOOTIF=${mac}
echo params: ${params}
echo WARNING: This does not really works!
imgfree
#kernel ${url}memdisk iso raw ${params}
#initrd ${mirror}/${dir}/${img}
sanboot --no-describe ${mirror}/${dir}/${img}
boot

:main_menu
exit 0
